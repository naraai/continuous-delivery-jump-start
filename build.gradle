buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.2'
    }
}

apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'findbugs'

group = 'org.gradle.training'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

sourceSets {
  integrationTest {
    java.srcDir "src/integTest/java"
    resources.srcDir "src/integTest/resources"
	compileClasspath += sourceSets.main.output + configurations.testRuntime
	runtimeClasspath += output + compileClasspath
  }
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'org.springframework:spring-webmvc:4.1.1.RELEASE'
    compile 'org.apache.httpcomponents:httpclient:4.3.6'
    compile 'commons-io:commons-io:2.4'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    providedCompile 'javax.servlet:servlet-api:2.5'
    runtime 'jstl:jstl:1.2'
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.10.8'
    integrationTestCompile 'org.springframework:spring-test:4.1.1.RELEASE'
	
    def tomcatVersion = '7.0.62'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

tomcat {
    contextPath = 'sample-app'
}

test {
  reports {
    html.destination = "$html.destination/unit"
    junitXml.destination = "$junitXml.destination/unit"
  }
  maxParallelForks=2
  
  testLogging {
    events 'skipped'
  }
}

task integrationTest(type: Test) {
  group 'verification'
  description 'Runs the integration tests'
  mustRunAfter test
  testClassesDir = sourceSets.integrationTest.output.classesDir
  classpath = sourceSets.integrationTest.runtimeClasspath
  reports {
    html.destination = file("$reports.html.destination/integration")
    junitXml.destination = file("$reports.junitXml.destination/integration")
  }
}

check.dependsOn integrationTest

findbugs {
  ignoreFailures = true
  toolVersion = "3.0.1"
}

tasks.withType(FindBugs) {
 reports {
   xml.enabled = false
   html.enabled = true   
 }
}